@startuml Корпоративный мессенджер - Deployment Diagram

skinparam monochrome true
skinparam nodesep 50
skinparam ranksep 50
skinparam defaultFontName Arial
skinparam defaultFontSize 12

' Узлы (Nodes)
node "Клиентское устройство" as client {
  component "Браузер пользователя" as browser {
    [index.html]
    [app.js]
    [style.css]
  }
}

node "Сервер приложений" as server {
  component "WSGI (Waitress)" as waitress {
    [run.py]
  }
  
  component "Python App" as python {
    package "views" as views {
      [auth.py]
      [groups.py]
      [message.py]
      [p_chat.py]
      [__init__.py]
      [base.py]
      [error.py]
      [search.py]
      [users.py]
    }
    
    package "models" as models {
      [UserModel.py]
      [GroupModel.py]
      [MessageModel.py]
    }
    
    [utils.py]
    [mimes.py]
  }
}

node "База данных" as db {
  database "SQLite (data.db)" as sqlite {
    [User]
    [GroupMessage]
    [Group]
    [PrivateMessage]
    [GroupMember]
    [Attachment]
  }
}

node "Файловое хранилище" as storage {
  folder "static/uploads" as files
  folder "templates" as templates
}

' Связи
browser -- waitress : HTTP/HTTPS (порт 8000)\nREST API
waitress --> python : WSGI
models --> sqlite : SQL запросы
views --> models : Вызов методов\nбизнес-логики
python --> files : Чтение/запись файлов
python --> templates : Отдача статики
views --> mimes : Определение\nMIME-типов
views --> utils : Вспомогательные\nфункции

db .. storage : Локальное хранилище

note right of python
  Модульная структура:
  - views: обработка HTTP запросов
  - models: работа с данными
  - Четкое разделение ответственности
end note

legend right
  == Пакеты ==
  | Views | Разделены по функционалу |
  | Models | Инкапсуляция работы с БД |
  == Взаимодействие ==
  | HTTP | API |
  | WSGI | Python Web |
  | SQL | SQLite |
endlegend

@enduml