@startuml Мессенджер - Схема взаимодействия компонентов (v2)

skinparam monochrome true
skinparam responseMessageBelowArrow true
skinparam defaultFontName Arial
skinparam defaultFontSize 12

actor Пользователь as user
participant "Браузер\n(index.html, app.js)" as browser
participant "Сервер\n(run.py)" as server
participant "WSGI App\n(app.py)" as app
participant "Маршрутизатор\n(routes.py)" as router
participant "Пакет views\n" as views
participant "Пакет models\n" as models
participant "База данных\n(data.db)" as db
participant "Файловое\nхранилище" as storage

' 1. Загрузка страницы
user -> browser: Открывает страницу
browser -> server: GET / (HTTP)
server -> app: WSGI запрос
app -> router: Определение маршрута
router -> views: base.py (IndexView)
views -> browser: HTML страница
browser -> server: Запрос статики (CSS/JS)
server -> browser: Статические файлы

' 2. Аутентификация
user -> browser: Вводит логин/пароль
browser -> server: POST /login (JSON)
server -> app: WSGI запрос
app -> router: /login
router -> views: auth.py (LoginHandler)
views -> models: UserModel.authenticate()
models -> db: SELECT users
db --> models: Данные пользователя
models --> views: User object
views -> browser: Установка cookies (user_id)
views -> browser: Редирект на /

' 3. Отправка сообщения
user -> browser: Вводит сообщение
browser -> server: POST /send (FormData)
server -> app: WSGI запрос
app -> router: /send
router -> views: message.py (MessageHandler)
views -> models: MessageModel.check_permissions()
models -> db: Проверка прав
db --> models: Результат
models --> views: Подтверждение
views -> storage: Сохранение вложений (если есть)
views -> models: MessageModel.create()
models -> db: INSERT message
db --> models: ID сообщения
models --> views: Message object
views -> browser: {"status": "success"}

' 4. Получение сообщений
browser -> server: GET /messages?since=0
server -> app: WSGI запрос
app -> router: /messages
router -> views: message.py (GetMessagesHandler)
views -> models: MessageModel.get_since()
models -> db: SELECT messages\nWHERE timestamp > 0
db --> models: Список сообщений
models --> views: Message list
views -> browser: JSON с сообщениями

' 5. Обновление интерфейса
browser -> browser: Отображение новых сообщений
browser -> server: Периодические запросы\n/messages?since=X

@enduml